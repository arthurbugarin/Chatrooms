{"version":3,"file":"bundle.js","sources":["../../front end/node_modules/svelte/internal/index.mjs","../../front end/src/MessagesContainer.svelte","../../front end/node_modules/engine.io-parser/build/esm/commons.js","../../front end/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../front end/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../front end/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../front end/node_modules/engine.io-parser/build/esm/index.js","../../front end/node_modules/@socket.io/component-emitter/index.mjs","../../front end/node_modules/engine.io-client/build/esm/globalThis.browser.js","../../front end/node_modules/engine.io-client/build/esm/util.js","../../front end/node_modules/engine.io-client/build/esm/transport.js","../../front end/node_modules/engine.io-client/build/esm/contrib/yeast.js","../../front end/node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../front end/node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../front end/node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../front end/node_modules/engine.io-client/build/esm/transports/polling.js","../../front end/node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../front end/node_modules/engine.io-client/build/esm/transports/websocket.js","../../front end/node_modules/engine.io-client/build/esm/transports/index.js","../../front end/node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../front end/node_modules/engine.io-client/build/esm/socket.js","../../front end/node_modules/socket.io-parser/build/esm/is-binary.js","../../front end/node_modules/socket.io-parser/build/esm/binary.js","../../front end/node_modules/socket.io-parser/build/esm/index.js","../../front end/node_modules/socket.io-client/build/esm/on.js","../../front end/node_modules/socket.io-client/build/esm/socket.js","../../front end/node_modules/socket.io-client/build/esm/contrib/backo2.js","../../front end/node_modules/socket.io-client/build/esm/manager.js","../../front end/node_modules/socket.io-client/build/esm/index.js","../../front end/node_modules/socket.io-client/build/esm/url.js","../../front end/src/ChatroomContainer.svelte","../../front end/src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.30.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n    export let socketio;\n    let messages = [];\n\n    console.log(socketio);\n\n    socketio.on(\"server message\", (msg) => {\n        messages.push('Servidor: ' + msg);\n        console.log('Server message from server: ', msg);\n        messages = messages;\n    });\n\n    socketio.on(\"message\", (msg) => {\n        messages.push('Mensagem: ' + msg)\n        console.log('Message from server: ', msg);\n        messages = messages;\n    });\n</script>\n\n{#each messages as message}\n    <p>{message}</p>\n{/each}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","<script>\n    import MessagesContainer from \"./MessagesContainer.svelte\";\n    import { io } from \"socket.io-client\";\n\n    const socketio = io();\n\n    let msg = \"\";\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        socketio.emit(\"message\", msg);\n        msg = \"\";\n    }\n\n    function handleClick() {\n        socketio.emit(\"message\", msg);\n        console.log('Message sent: ' + msg);\n    }\n\n    var input = document.getElementById(\"entraMsg\");\n    if(input){\n        input.addEventListener(\"keyup\", function(event) {\n            // Number 13 is the \"Enter\" key on the keyboard\n            if (event.keyIdentifier === 13) {\n                // Cancel the default action, if needed\n                event.preventDefault();\n                // Trigger the button element with a click\n                document.getElementById(\"btnMsg\").click();\n            }\n        });\n    }\n</script>\n\n\n<div class=\"messages-container\">\n    <div>\n        <MessagesContainer socketio={socketio} />\n    </div>\n</div>\n<div class=\"message-input-container\">\n    <input id=\"entraMsg\" bind:value={msg}>\n    <button id=\"btnMsg\" on:click={handleClick}>\n        Enviar\n    </button>\n</div>\n\n\n<style>\n    /* TODO: manter o scroll no final das mensagens (ou seja, nas mensagens mais recentes)\n             referência: https://stackoverflow.com/questions/18614301/keep-overflow-div-scrolled-to-bottom-unless-user-scrolls-up */\n    .messages-container {\n        overflow-y: scroll;\n        height: 300px;\n        border-bottom: 2px groove gray;\n        display: flex;\n        flex-direction: column-reverse;\n    }\n\n    .message-input-container {\n        padding-top: 20px;\n        padding-bottom: 20px;\n    }\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_input_value","input","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","wholeText","iterations","socketio","messages","console","log","on","msg","PACKET_TYPES","PACKET_TYPES_REVERSE","key","ERROR_PACKET","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","cb","emit","args","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","TransportError","Error","reason","description","super","Transport","writable","query","readyState","socket","doOpen","doClose","onClose","packets","write","packet","onPacket","details","alphabet","prev","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","async","undefined","xd","xscheme","xs","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","onError","send","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onOpen","onclose","closeEvent","onmessage","ev","onData","onerror","lastPacket","close","schema","secure","port","Number","timestampRequests","timestampParam","b64","encodedQuery","hostname","path","polling","location","isSSL","protocol","poll","onPause","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","sid","assign","req","request","xhrStatus","pollXhr","re","parts","parse","src","replace","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","upgrading","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","utf8Length","ceil","byteLength","size","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Decoder","reviver","decodeString","BINARY_EVENT","BINARY_ACK","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","EVENT","ACK","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subs","onpacket","active","subEvents","_readyState","ack","_registerAckCallback","isTransportWritable","engine","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","getElementById","keyIdentifier","preventDefault","click","body"],"mappings":"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"}